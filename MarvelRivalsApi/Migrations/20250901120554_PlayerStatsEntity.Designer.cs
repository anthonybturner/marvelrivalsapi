// <auto-generated />
using System;
using System.Collections.Generic;
using MarvelRivalsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarvelRivalsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250901120554_PlayerStatsEntity")]
    partial class PlayerStatsEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer");

                    b.Property<int?>("AdditionalFieldsId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("HeroId")
                        .HasColumnType("integer");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsCollab")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalFieldsId")
                        .IsUnique();

                    b.HasIndex("HeroId");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.AdditionalFields", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AbilityId")
                        .HasColumnType("integer");

                    b.Property<string>("Casting")
                        .HasColumnType("text");

                    b.Property<string>("EnergyCost")
                        .HasColumnType("text");

                    b.Property<string>("EnergyRecoverySpeed")
                        .HasColumnType("text");

                    b.Property<string>("ExtraFieldsJson")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("MaximumEnergy")
                        .HasColumnType("text");

                    b.Property<string>("MovementBoost")
                        .HasColumnType("text");

                    b.Property<string>("SpecialEffect")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AdditionalFields");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Costume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Appearance")
                        .HasColumnType("text");

                    b.Property<int>("CostumeId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("HeroId")
                        .HasColumnType("integer");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("QualityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.HasIndex("QualityId");

                    b.ToTable("Costume");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.GameMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<int>("GameMapId")
                        .HasColumnType("integer");

                    b.Property<string>("GameMode")
                        .HasColumnType("text");

                    b.Property<List<string>>("Images")
                        .HasColumnType("text[]");

                    b.Property<bool>("IsCompetitive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("SubMapId")
                        .HasColumnType("integer");

                    b.Property<string>("Video")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SubMapId");

                    b.ToTable("GameMaps");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Hero", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("AttackType")
                        .HasColumnType("text");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Difficulty")
                        .HasColumnType("text");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Lore")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RealName")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.MatchHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameModeId")
                        .HasColumnType("integer");

                    b.Property<string>("MapThumbnail")
                        .HasColumnType("text");

                    b.Property<int>("MatchMapId")
                        .HasColumnType("integer");

                    b.Property<string>("MatchMapName")
                        .HasColumnType("text");

                    b.Property<double>("MatchPlayDuration")
                        .HasColumnType("double precision");

                    b.Property<int>("MatchPlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("MatchSeason")
                        .HasColumnType("text");

                    b.Property<long>("MatchTimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("MatchUid")
                        .HasColumnType("text");

                    b.Property<int>("MatchWinnerSide")
                        .HasColumnType("integer");

                    b.Property<int>("MvpUid")
                        .HasColumnType("integer");

                    b.Property<int>("PlayModeId")
                        .HasColumnType("integer");

                    b.Property<int?>("ScoreInfoId")
                        .HasColumnType("integer");

                    b.Property<int>("SvpUid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MatchPlayerId")
                        .IsUnique();

                    b.HasIndex("ScoreInfoId");

                    b.ToTable("MatchHistory");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.MatchPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Assists")
                        .HasColumnType("integer");

                    b.Property<int?>("Camp")
                        .HasColumnType("integer");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer");

                    b.Property<bool>("Disconnected")
                        .HasColumnType("boolean");

                    b.Property<int>("IsWinId")
                        .HasColumnType("integer");

                    b.Property<int>("Kills")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerHeroId")
                        .HasColumnType("integer");

                    b.Property<string>("PlayerName")
                        .HasColumnType("text");

                    b.Property<long?>("PlayerUid")
                        .HasColumnType("bigint");

                    b.Property<int>("ScoreInfoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsWinId");

                    b.HasIndex("PlayerHeroId");

                    b.HasIndex("ScoreInfoId");

                    b.ToTable("MatchPlayer");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PlayerIconId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerRankId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerStatsPlayerInfoId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerTeamId")
                        .HasColumnType("integer");

                    b.Property<long>("Uid")
                        .HasColumnType("bigint");

                    b.Property<string>("level")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayerIconId");

                    b.HasIndex("PlayerRankId");

                    b.HasIndex("PlayerStatsPlayerInfoId");

                    b.HasIndex("PlayerTeamId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Assists")
                        .HasColumnType("integer");

                    b.Property<int?>("Deaths")
                        .HasColumnType("integer");

                    b.Property<int?>("HeroId")
                        .HasColumnType("integer");

                    b.Property<string>("HeroName")
                        .HasColumnType("text");

                    b.Property<string>("HeroType")
                        .HasColumnType("text");

                    b.Property<int?>("Kills")
                        .HasColumnType("integer");

                    b.Property<double?>("PlayTime")
                        .HasColumnType("double precision");

                    b.Property<double?>("TotalDamageTaken")
                        .HasColumnType("double precision");

                    b.Property<double?>("TotalHeroDamage")
                        .HasColumnType("double precision");

                    b.Property<double?>("TotalHeroHeal")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("PlayerHero");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerIcon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("IconId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayerIcon");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerOverallStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PlayerRankedId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerUnrankedId")
                        .HasColumnType("integer");

                    b.Property<int>("TotalMatches")
                        .HasColumnType("integer");

                    b.Property<int>("TotalWins")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerRankedId");

                    b.HasIndex("PlayerUnrankedId");

                    b.ToTable("PlayerOverallStats");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayerRank");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerRanked", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TotalAssists")
                        .HasColumnType("integer");

                    b.Property<int>("TotalDeaths")
                        .HasColumnType("integer");

                    b.Property<int>("TotalKills")
                        .HasColumnType("integer");

                    b.Property<int>("TotalMatches")
                        .HasColumnType("integer");

                    b.Property<int>("TotalMvp")
                        .HasColumnType("integer");

                    b.Property<int>("TotalSvp")
                        .HasColumnType("integer");

                    b.Property<string>("TotalTimePlayed")
                        .HasColumnType("text");

                    b.Property<float>("TotalTimePlayedRaw")
                        .HasColumnType("real");

                    b.Property<int>("TotalWins")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PlayerRanked");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerScoreInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("AddScore")
                        .HasColumnType("double precision");

                    b.Property<int?>("Level")
                        .HasColumnType("integer");

                    b.Property<int?>("NewLevel")
                        .HasColumnType("integer");

                    b.Property<double?>("NewScore")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("PlayerScoreInfo");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OverallStatsId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerUpdatesId")
                        .HasColumnType("integer");

                    b.Property<long>("Uid")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OverallStatsId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PlayerUpdatesId");

                    b.ToTable("PlayerStats");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerStatsPlayerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PlayerName")
                        .HasColumnType("text");

                    b.Property<long?>("PlayerUid")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PlayerStatsPlayerInfo");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClubTeamId")
                        .HasColumnType("text");

                    b.Property<string>("ClubTeamMiniName")
                        .HasColumnType("text");

                    b.Property<string>("ClubTeamType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayerTeam");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerUnranked", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TotalAssists")
                        .HasColumnType("integer");

                    b.Property<int>("TotalDeaths")
                        .HasColumnType("integer");

                    b.Property<int>("TotalKills")
                        .HasColumnType("integer");

                    b.Property<int>("TotalMatches")
                        .HasColumnType("integer");

                    b.Property<int>("TotalMvp")
                        .HasColumnType("integer");

                    b.Property<int>("TotalSvp")
                        .HasColumnType("integer");

                    b.Property<string>("TotalTimePlayed")
                        .HasColumnType("text");

                    b.Property<float>("TotalTimePlayedRaw")
                        .HasColumnType("real");

                    b.Property<int>("TotalWins")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PlayerUnranked");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerUpdates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InfoUpdateTime")
                        .HasColumnType("text");

                    b.Property<string>("LastHistoryUpdate")
                        .HasColumnType("text");

                    b.Property<string>("LastInsertedMatch")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateRequest")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayerUpdates");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Quality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Quality");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.ScoreInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("One")
                        .HasColumnType("integer");

                    b.Property<int>("Zero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ScoreInfo");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.SubMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("SubMapId")
                        .HasColumnType("integer");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SubMap");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Transformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Health")
                        .HasColumnType("text");

                    b.Property<int?>("HeroId")
                        .HasColumnType("integer");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("MovementSpeed")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("TransformationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Transformation");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.WinInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsWin")
                        .HasColumnType("boolean");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("WinInfo");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Ability", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.AdditionalFields", "AdditionalFields")
                        .WithOne("Ability")
                        .HasForeignKey("MarvelRivalsApi.Models.Entities.Ability", "AdditionalFieldsId");

                    b.HasOne("MarvelRivalsApi.Models.Entities.Hero", "Hero")
                        .WithMany("Abilities")
                        .HasForeignKey("HeroId");

                    b.Navigation("AdditionalFields");

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Costume", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.Hero", "Hero")
                        .WithMany("Costumes")
                        .HasForeignKey("HeroId");

                    b.HasOne("MarvelRivalsApi.Models.Entities.Quality", "Quality")
                        .WithMany()
                        .HasForeignKey("QualityId");

                    b.Navigation("Hero");

                    b.Navigation("Quality");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.GameMap", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.SubMap", "SubMap")
                        .WithMany()
                        .HasForeignKey("SubMapId");

                    b.Navigation("SubMap");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.MatchHistory", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.MatchPlayer", "MatchPlayer")
                        .WithOne("MatchHistory")
                        .HasForeignKey("MarvelRivalsApi.Models.Entities.MatchHistory", "MatchPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.ScoreInfo", "ScoreInfo")
                        .WithMany()
                        .HasForeignKey("ScoreInfoId");

                    b.Navigation("MatchPlayer");

                    b.Navigation("ScoreInfo");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.MatchPlayer", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.WinInfo", "IsWin")
                        .WithMany()
                        .HasForeignKey("IsWinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerHero", "PlayerHero")
                        .WithMany()
                        .HasForeignKey("PlayerHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerScoreInfo", "ScoreInfo")
                        .WithMany()
                        .HasForeignKey("ScoreInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IsWin");

                    b.Navigation("PlayerHero");

                    b.Navigation("ScoreInfo");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Player", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerIcon", "Icon")
                        .WithMany()
                        .HasForeignKey("PlayerIconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerRank", "Rank")
                        .WithMany()
                        .HasForeignKey("PlayerRankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerStatsPlayerInfo", "Info")
                        .WithMany()
                        .HasForeignKey("PlayerStatsPlayerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerTeam", "Team")
                        .WithMany()
                        .HasForeignKey("PlayerTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Icon");

                    b.Navigation("Info");

                    b.Navigation("Rank");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerOverallStats", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerRanked", "Ranked")
                        .WithMany()
                        .HasForeignKey("PlayerRankedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerUnranked", "Unranked")
                        .WithMany()
                        .HasForeignKey("PlayerUnrankedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ranked");

                    b.Navigation("Unranked");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.PlayerStat", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerOverallStats", "OverallStats")
                        .WithMany()
                        .HasForeignKey("OverallStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarvelRivalsApi.Models.Entities.PlayerUpdates", "Updates")
                        .WithMany()
                        .HasForeignKey("PlayerUpdatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OverallStats");

                    b.Navigation("Player");

                    b.Navigation("Updates");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Transformation", b =>
                {
                    b.HasOne("MarvelRivalsApi.Models.Entities.Hero", "Hero")
                        .WithMany("Transformations")
                        .HasForeignKey("HeroId");

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.AdditionalFields", b =>
                {
                    b.Navigation("Ability");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.Hero", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Costumes");

                    b.Navigation("Transformations");
                });

            modelBuilder.Entity("MarvelRivalsApi.Models.Entities.MatchPlayer", b =>
                {
                    b.Navigation("MatchHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
